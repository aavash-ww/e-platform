@use "sass:math";

$grid-columns: 12;
$grid-gap: (
  "0": 0,
  "1": 10px,
  "2": 2rem,
  "3": 3rem,
);

$justify-values: flex-start, flex-end, space-between, space-around, center;

//justify-xxxx
@each $val in $justify-values {
    .justify-#{$val} {
        justify-content: $val;
    }
}

// gap-x
@each $key, $val in $grid-gap {
    .gap-#{$key} > * {
        padding: $val;
    }

    .gap-#{$key} {
        margin-right: -$val;
        margin-left: -$val;
    }
}


//layout
.container {
  width: 100%;
  max-width: 90%;
  margin: 0 auto;
  padding: 0 20px;
}

.row {
  display: flex;
  flex-flow: row wrap;
}

//cols
@for $i from 1 through $grid-columns {
  .grid-col-#{$i} {
    box-sizing: border-box;
    flex-grow: 0;
    width: math.div($i * 100%, $grid-columns);
  }
}

@include md {
  @for $i from 1 through $grid-columns {
    .grid-col-md-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include sm {
  @for $i from 1 through $grid-columns {
    .grid-col-sm-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
